/*******************************************************************************
 * ADSync4J (https://github.com/zagyi/adsync4j)
 *
 * Copyright (c) 2013 Balazs Zagyvai
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Balazs Zagyvai
 ***************************************************************************** */
import org.adsync4j.gradle.Libs
import org.adsync4j.gradle.Projects

import static org.adsync4j.gradle.GradleUtils.addDependencies

Project prj = project

def unboundidClient_noLdapSdk = prj.dependencies.create(Projects.unboundidClient) {
    ModuleDependency dependency ->
        dependency.exclude group: 'com.unboundid', module: 'unboundid-ldapsdk'
}

addDependencies(prj, [
        testCompile: [
                Libs.groovy,
                Libs.hamcrest,
                Libs.spock,
                Libs.spockSpring,
                Libs.springTest,
                Libs.springContext,
                Projects.core,
                Projects.testUtils,
                unboundidClient_noLdapSdk,
                prj.files("lib/unboundid-ldapsdk-2.3.3-nonsealed.jar"),
        ],

        testRuntime: [
                Libs.slf4jBridgeJUL,
                Libs.slf4jBridgeJCL,
        ],
])

//SourceSetContainer sourceSets = prj.sourceSets
//def test = sourceSets['test']
//test.compileClasspath = reorderProjectResourcesBeforeExternalFiles(test.compileClasspath, prj)
//test.runtimeClasspath = reorderProjectResourcesBeforeExternalFiles(test.runtimeClasspath, prj)

prj.tasks.create(name: 'testAgainstRealActiveDirectory', type: Test) { Test testTask ->
    testTask.jvmArgs '-Dspring.profiles.active=realActiveDirectory'
}

// normal test task performs system test against an in-memory ldap server that's mocking the behavior of a real Active Directory
prj.tasks['test'].configure { Test testTask ->
    def propertiesFileLocation = getSpringConformPropertiesFileReference(testTask)
    testTask.jvmArgs([
            '-Dspring.profiles.active=inMemoryLdapServer',
            "-DinMemoPropertiesLocation=$propertiesFileLocation",
    ])
}

def getSpringConformPropertiesFileReference(Test testTask) {
    def userProvidedPropertiesFileLocation = testTask.systemProperties['inMemoPropertiesLocation']

    userProvidedPropertiesFileLocation ?
        "file://$userProvidedPropertiesFileLocation" :
        'classpath:/org/adsync4j/impl/in-memory-ldap.properties'
}
